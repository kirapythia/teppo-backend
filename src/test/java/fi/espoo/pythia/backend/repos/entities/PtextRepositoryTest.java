package fi.espoo.pythia.backend.repos.entities;

import static org.assertj.core.api.Assertions.assertThat;

import java.util.ArrayList;
import java.util.List;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;
import org.springframework.test.context.junit4.SpringRunner;

import fi.espoo.pythia.backend.repos.PlanRepository;
import fi.espoo.pythia.backend.repos.PtextRepository;

//@RunWith(SpringRunner.class) is used to provide a bridge between 
//Spring Boot test features and JUnit. 
//Whenever we are using any Spring Boot testing features in out JUnit tests, 
//this annotation will be required.
@RunWith(SpringRunner.class)
@DataJpaTest
public class PtextRepositoryTest {

	@Autowired
	private TestEntityManager entityManager;

	@Autowired
	private PtextRepository ptextRepository;

	@Autowired
	private PlanRepository planRepository;

	@Test
	public void whenFindByPlan_thenReturnPcomment() {
		// given
		ProjectUpdate project = new ProjectUpdate();
		project.setCompleted(false);
		project.setCreatedAt(null);
		project.setCreatedBy(null);
		project.setDescription("");
		project.setHansuProjectId("E2222");
		project.setPlans(new ArrayList<Plan>());
		project.setMainNo((short) 2345);
		project.setName("Bert's  project");
		// project.setProjectId(1L); AUTOGENERATED
		project.setSisterProjects(new ArrayList<SisterProjectUpdate>());
		project.setUpdatedAt(null);
		project.setUpdatedBy(null);

		Plan plan = new Plan();
		plan.setStatus(Status.APPROVED);
		plan.setPtextList(null);
		plan.setCreatedAt(null);
		plan.setDeleted(false);
		plan.setMainNo((short) 1234);
		plan.setProject(project);
		plan.setSubNo((short) 0);
		plan.setUpdatedAt(null);
		plan.setUpdatedBy(null);
		plan.setPdfUrl(null);
		plan.setVersion((short) 0);
		


		Ptext ptext = new Ptext();
		ptext.setApproved(false);
		ptext.setCreatedAt(null);
		ptext.setCreatedBy(null);
		ptext.setPlan(plan);
		ptext.setPtext("Bert");
		ptext.setUpdatedAt(null);
		ptext.setUpdatedBy(null);
		ptext.setUrl(null);

		
		
		entityManager.persist(project);
		entityManager.flush();

		entityManager.persist(plan);
		entityManager.flush();

		entityManager.persist(ptext);
		entityManager.flush();

//		// when
//	
//		List<Ptext> foundPtexts = ptextRepository.findAll();
//
//		// then
//		assertThat(foundPtexts.get(0).getPtext()).isEqualTo(ptext.getPtext());
//		System.out.println("found comments:" + foundPtexts.get(0).getPtext());
//		System.out.println("Comment:" + ptext.getPtext());

	}
}